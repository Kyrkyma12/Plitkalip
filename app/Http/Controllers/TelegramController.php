<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;

class TelegramController extends Controller
{
    public function __invoke(Request $request)
    {
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'phone' => 'required|string|max:20|regex:/^[\d\s\-\+\(\)]{10,20}$/',
        ], [
            'phone.regex' => '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
        ]);

        try {
            $botToken = config('services.telegram.bot_token');
            $chatId = config('services.telegram.chat_id');

            $message = "‚ú® *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê* ‚ú®\n\n"
                . "‚ñ´Ô∏è *–ò–º—è:* {$validated['name']}\n"
                . "‚ñ´Ô∏è *–¢–µ–ª–µ—Ñ–æ–Ω:* `{$validated['phone']}`\n"
                . "‚ñ´Ô∏è *–î–∞—Ç–∞:* " . now()->format('d.m.Y H:i') . "\n\n"
                . "üü¢ *–°—Ç–∞—Ç—É—Å:* –û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏";

            $response = Http::post("https://api.telegram.org/bot{$botToken}/sendMessage", [
                'chat_id' => $chatId,
                'text' => $message,
                'parse_mode' => 'Markdown'
            ]);

            if ($response->successful()) {
                return response()->json([
                    'success' => true,
                    'message' => '–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
                ]);
            }

            throw new \Exception('–û—à–∏–±–∫–∞ Telegram API: ' . $response->body());

        } catch (\Exception $e) {
            Log::error('Telegram send error: ' . $e->getMessage());
            return response()->json([
                'success' => false,
                'message' => '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            ], 500);
        }
    }
}
